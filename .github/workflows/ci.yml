# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, v2-** ]      # build on feature branches too
  pull_request:                    # PRs against main still trigger build
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    # ── LocalStack service container ────────────────────────────────────────────
    services:
      localstack:
        image: localstack/localstack:3
        ports:
          - "4566:4566"
        env:
          SERVICES: s3,sqs,dynamodb
        options: >-
          --health-cmd="curl -fs http://localhost:4566 || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20

    # ── Steps ───────────────────────────────────────────────────────────────────
    steps:
      - uses: actions/checkout@v4

      # ---------- Front-end ----------
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: viewer/package-lock.json

      - name: Build viewer
        working-directory: viewer
        run: |
          npm ci
          npm run lint
          npm run test
          npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: spa-dist
          path: viewer/dist          # << correct output folder

      # ---------- Back-end ----------
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Set dummy AWS creds for tests
        run: |
          echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV

      - name: Install Python deps
        run: |
          pip install -e .[dev]      # includes pytest, moto, black, flake8, etc.

      - name: Lint & unit tests
        run: |
          black --check .
          flake8 .
          pytest -q

  # ---------- Optional preview deploy to GitHub Pages ----------
  pages-preview:
    needs: build-test
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: spa-dist

      - id: deploy
        uses: actions/deploy-pages@v4
